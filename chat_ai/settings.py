"""
Django settings for chat_ai project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b5_(if*1f!%+f%^1eo*b=)ynf+r9ubrfj+i@d=&iyrxx=dz5gd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'chat.middleware.AuthRequiredMiddleware',
]

ROOT_URLCONF = 'chat_ai.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chat_ai.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'chat_ai' / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# OpenAI API Key
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

# Anthropic API Key (для Claude)
ANTHROPIC_API_KEY = os.getenv('ANTHROPIC_API_KEY')

# Google API Key (для Gemini)
GOOGLE_API_KEY = os.getenv('GOOGLE_API_KEY')

# Mistral API Key
MISTRAL_API_KEY = os.getenv('MISTRAL_API_KEY')

# Available OpenAI models
OPENAI_MODELS = [
    {'id': 'gpt-4o', 'name': 'GPT-4o'},
    {'id': 'gpt-4o-mini', 'name': 'GPT-4o Mini'},
    {'id': 'o1-preview', 'name': 'o1 Preview'},
    {'id': 'o1-mini', 'name': 'o1 Mini'},
    {'id': 'gpt-4-turbo', 'name': 'GPT-4 Turbo'},
    {'id': 'gpt-4', 'name': 'GPT-4'},
    # Newer/recent models (will be marked unavailable if API does not expose them)
    {'id': 'gpt-4.1', 'name': 'GPT-4.1'},
    {'id': 'gpt-4.1-mini', 'name': 'GPT-4.1 Mini'},
    {'id': 'o1', 'name': 'o1'},
    {'id': 'o1-mini', 'name': 'o1 Mini (Stable)'},
    # Placeholder for future model – will be disabled if not present in live API
    {'id': 'gpt-5', 'name': 'GPT-5 (Placeholder)'},
]

# Available Anthropic models
ANTHROPIC_MODELS = [
    {'id': 'claude-3-opus-20240229', 'name': 'Claude 3 Opus'},
    {'id': 'claude-3-sonnet-20240229', 'name': 'Claude 3 Sonnet'},
    {'id': 'claude-3-haiku-20240307', 'name': 'Claude 3 Haiku'},
]

# Available Google models
GOOGLE_MODELS = [
    {'id': 'gemini-pro', 'name': 'Gemini Pro'},
    {'id': 'gemini-pro-vision', 'name': 'Gemini Pro Vision'},
]

# Available Mistral models
MISTRAL_MODELS = [
    {'id': 'mistral-small', 'name': 'Mistral Small (Доступен)'},
    {'id': 'mistral-medium', 'name': 'Mistral Medium (Ограничен)'},
    {'id': 'mistral-large-latest', 'name': 'Mistral Large (Ограничен)'},
    {'id': 'mistral-small-latest', 'name': 'Mistral Small Latest'},
    {'id': 'open-mistral-7b', 'name': 'Open Mistral 7B'},
]
